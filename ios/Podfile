platform :ios, '14.0'

# Use static linking for reducing binary size
use_frameworks!

# Disable CocoaPods analytics to reduce build latency
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Set up the Flutter environment
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Use modular headers for Firebase dependencies
  use_modular_headers!

  # Install Firebase dependencies
  pod 'Firebase/Core'
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore'
  pod 'Firebase/Storage'
  pod 'Firebase/AnalyticsWithoutAdIdSupport'
  pod 'Firebase/Performance'
  pod 'Firebase/Crashlytics'
  pod 'Firebase/Analytics'
  pod 'AppAuth'

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# Post-install configurations
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Add additional iOS build settings for Flutter
    flutter_additional_ios_build_settings(target)

    # Set the iOS deployment target explicitly
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
    end

    # Modify the compiler flags for BoringSSL-GRPC
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
  end
end
